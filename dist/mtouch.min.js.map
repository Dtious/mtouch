{"version":3,"file":"mtouch.min.js","sources":["../src/index.js","../src/utils.js","../src/handlerBus.js"],"sourcesContent":["import _ from './utils';\nimport HandlerBus from './handlerBus';\n\nconst EVENT = ['touchstart','touchmove','touchend','drag','dragstart','dragend','pinch','pinchstart','pinchend','rotate','rotatestart','rotatend','singlePinchstart','singlePinch','singlePinchend','singleRotate','singleRotatestart','singleRotatend'];\n\nconst ORIGINEVENT = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n\nexport default function MTouch(el = '') {\n    // 兼容不使用 new 的方式；\n    if (!(this instanceof MTouch))return new MTouch(el);\n    // 开关；\n    // 初始化时关闭，在调用 on 函数时对应开启；\n    this.use = {\n        drag: false,\n        pinch: false,\n        rotate: false,\n        singlePinch: false,\n        singleRotate: false,\n    };\n    // 获取容器元素；\n    this.operator = this.el = _.getEl(el);\n    // 状态记录；\n    this.draging = this.pinching = this.rotating = this.singlePinching = this.singleRotating = false;\n    // 全局参数记录；\n    this.fingers = 0;\n    this.startScale = 1;\n    this.startPoint = {};\n    this.secondPoint = {};\n    this.pinchStartLength = null;\n    this.singlePinchStartLength = null;\n    this.vector1 = {};\n    this.singleBasePoint = {};\n\n    // 初始化注册事件队列；\n    this._driveBus();\n    // 监听原生 touch 事件；\n    this._bind();\n}\n\nMTouch.prototype._driveBus = function() {\n    EVENT.forEach(evName => {\n        this[evName] = new HandlerBus(this.el);\n    });\n};\n\nMTouch.prototype._bind = function() {\n    ORIGINEVENT.forEach(evName => {\n        let fn = evName == 'touchcancel'? 'end': evName.replace('touch', '');\n        // 需要存下 bind(this) 后的函数指向，用于 destroy;\n        this[`_${fn}_bind`] = this[`_${fn}`].bind(this);\n        this.el.addEventListener(evName, this[`_${fn}_bind`], false);\n    });\n};\nMTouch.prototype.destroy = function() {\n    ORIGINEVENT.forEach(evName => {\n        let fn = evName == 'touchcancel' ? 'end' : evName.replace('touch', '');\n        this.el.removeEventListener(evName, this[`_${fn}_bind`], false);\n    });\n};\nMTouch.prototype._start = function(e) {\n    if (!e.touches || e.type !== 'touchstart')return;\n    // 记录手指数量；\n    this.fingers = e.touches.length;\n    // 记录第一触控点；\n    this.startPoint = _.getPoint(e, 0);\n    // 计算单指操作时的基础点；\n    this.singleBasePoint = _.getBasePoint(this.operator);\n    // 双指操作时\n    if (this.fingers > 1) {\n        // 第二触控点；\n        this.secondPoint = _.getPoint(e, 1);\n        // 计算双指向量；\n        this.vector1 = _.getVector(this.secondPoint, this.startPoint);\n        // 计算向量模；\n        this.pinchStartLength = _.getLength(this.vector1);\n    } else if (this.use.singlePinch) {\n        // 单指且监听 singlePinch 时，计算向量模；\n        let pinchV1 = _.getVector(this.startPoint, this.singleBasePoint);\n        this.singlePinchStartLength = _.getLength(pinchV1);\n    }\n    // 触发 touchstart 事件；\n    this.touchstart.fire({origin: e, eventType: 'touchstart'});\n};\nMTouch.prototype._move = function(ev) {\n    if (!ev.touches || ev.type !== 'touchmove')return;\n    // 判断触控点是否为 singlebutton 区域；\n    let isSingleButton = _.data(ev.target,'singleButton'),\n        curFingers = ev.touches.length,\n        curPoint = _.getPoint(ev, 0),\n        singlePinchLength,\n        pinchLength,\n        rotateV1,\n        rotateV2,\n        pinchV2;\n    // 当从原先的两指到一指的时候，可能会出现基础手指的变化，导致跳动；\n    // 因此需屏蔽掉一次错误的touchmove事件，待重新设置基础指后，再继续进行；\n    if (curFingers < this.fingers) {\n        this.startPoint = curPoint;\n        this.fingers = curFingers;\n        return;\n    }\n    // 两指先后触摸时，只会触发第一指一次 touchstart，第二指不会再次触发 touchstart；\n    // 因此会出现没有记录第二指状态，需要在touchmove中重新获取参数；\n    if (curFingers > 1 && (!this.secondPoint || !this.vector1 || !this.pinchStartLength)) {\n        this.secondPoint = _.getPoint(ev, 1);\n        this.vector1 = _.getVector(this.secondPoint, this.startPoint);\n        this.pinchStartLength = _.getLength(this.vector1);\n    }\n    // 双指时，需触发 pinch 和 rotate 事件；\n    if (curFingers > 1) {\n        let curSecPoint = _.getPoint(ev, 1),\n            vector2 = _.getVector(curSecPoint, curPoint);\n        // 触发 pinch 事件；\n        if (this.use.pinch) {\n            pinchLength = _.getLength(vector2);\n            this._eventFire('pinch', {\n                delta: {\n                    scale: pinchLength / this.pinchStartLength,\n                },\n                origin: ev,\n            });\n            this.pinchStartLength = pinchLength;\n        }\n        // 触发 rotate 事件；\n        if (this.use.rotate) {\n            this._eventFire('rotate', {\n                delta: {\n                    rotate: _.getAngle(this.vector1, vector2),\n                },\n                origin: ev,\n            });\n            this.vector1 = vector2;\n        }\n    } else {\n        // 触发 singlePinch 事件;\n        if (this.use.singlePinch && isSingleButton) {\n            pinchV2 = _.getVector(curPoint, this.singleBasePoint);\n            singlePinchLength = _.getLength(pinchV2);\n            this._eventFire('singlePinch', {\n                delta: {\n                    scale: singlePinchLength / this.singlePinchStartLength,\n                    deltaX:curPoint.x - this.startPoint.x,\n                    deltaY:curPoint.y - this.startPoint.y,\n                },\n                origin: ev,\n            });\n            this.singlePinchStartLength = singlePinchLength;\n        }\n        // 触发 singleRotate 事件;\n        if (this.use.singleRotate && isSingleButton) {\n            rotateV1 = _.getVector(this.startPoint, this.singleBasePoint);\n            rotateV2 = _.getVector(curPoint, this.singleBasePoint);\n            this._eventFire('singleRotate', {\n                delta: {\n                    rotate: _.getAngle(rotateV1, rotateV2),\n                },\n                origin: ev,\n            });\n        }\n    }\n    // 触发 drag 事件；\n    if (this.use.drag) {\n        if (!isSingleButton) {\n            this._eventFire('drag', {\n                delta: {\n                    deltaX: curPoint.x - this.startPoint.x,\n                    deltaY: curPoint.y - this.startPoint.y,\n                },\n                origin: ev,\n            });\n        }\n    }\n    this.startPoint = curPoint;\n    // 触发 touchmove 事件；\n    this.touchmove.fire({eventType: 'touchmove', origin: ev});\n    ev.preventDefault();\n};\nMTouch.prototype._end = function(ev) {\n    if (!ev.touches && ev.type !== 'touchend' && ev.type !== 'touchcancel')return;\n    // 触发 end 事件；\n    ['pinch', 'drag', 'rotate', 'singleRotate', 'singlePinch'].forEach(evName => {\n        this._eventEnd(evName, {origin: ev});\n    });\n    this.touchend.fire({eventType: 'touchend', origin: ev});\n};\nMTouch.prototype._eventFire = function(evName, ev) {\n    let ing = `${evName}ing`,\n        start = `${evName}start`;\n    if (!this[ing]) {\n        ev.eventType = start;\n        this[start].fire(ev);\n        this[ing] = true;\n    } else {\n        ev.eventType = evName;\n        this[evName].fire(ev);\n    }\n};\nMTouch.prototype._eventEnd = function(evName, ev) {\n    let ing = `${evName}ing`,\n        end;\n    if (evName == 'rotate' || evName == 'singleRotate') {\n        end = `${evName}nd`;\n    } else {\n        end = `${evName}end`;\n    }\n    if (this[ing]) {\n        ev.eventType = end;\n        this[end].fire(ev);\n        this[ing] = false;\n    }\n};\n// 添加 button 区域；\n// 背景样式由业务方定制；\nMTouch.prototype._addButton = function(el){\n    let [button] = _.domify(`<div class=\"mtouch-singleButton\" data-singleButton='true' style='position:absolute;right:-15px;bottom: -15px;width:30px;height: 30px;background-size: 100% 100%;'></div>`),\n        _style;\n    el.appendChild(button);\n    el.setAttribute('data-mtouch-addButton',true);\n    if(getComputedStyle && window.getComputedStyle(el,null).position === 'static'){\n        _style = el.style || '';\n        el.style = _style + 'position:relative';\n    }\n};\n// 切换 operator;\nMTouch.prototype.switch = function(el,addButton = true) {\n    let _el;\n    if(!el){\n        this.operator = this.el;\n        return;\n    }\n    this.operator = _el = _.getEl(el);\n    if(!_.data(_el,'mtouch-addButton') && (this.use.singleRotate || this.use.singlePinch) && addButton){\n        this._addButton(_el);\n    }\n};\nMTouch.prototype.on = function(evName, handler = ()=>{}, operator) {\n    if(_.include(evName,' ')){\n        evName.split(' ').forEach(v=>{\n            this._on(v,handler,operator);\n        });\n    }else{\n        this._on(evName,handler,operator);\n    }\n    return this;\n};\nMTouch.prototype._on = function(evName,handler,operator){\n    this.use[_.getUseName(evName)] = true;\n    this[evName].add(handler);\n    this.switch(operator);\n};\nMTouch.prototype.off = function(evName, handler) {\n    this[evName].del(handler);\n};\n","export default {\n    getLength(v1) {\n        if (typeof v1 !== 'object') {\n            console.error('getLength error!');\n            return;\n        }\n        return Math.sqrt(v1.x * v1.x + v1.y * v1.y);\n    },\n    getAngle(v1, v2) {\n        if (typeof v1 !== 'object' || typeof v2 !== 'object') {\n            console.error('getAngle error!');\n            return;\n        }\n        // 判断方向，顺时针为 1 ,逆时针为 -1；\n        let direction = v1.x * v2.y - v2.x * v1.y > 0 ? 1: -1,\n            // 两个向量的模；\n            len1 = this.getLength(v1),\n            len2 = this.getLength(v2),\n            mr = len1 * len2,\n            dot,r;\n        if (mr === 0)return 0;\n        // 通过数量积公式可以推导出：\n        // cos = (x1 * x2 + y1 * y2)/(|a| * |b|);\n        dot = v1.x * v2.x + v1.y * v2.y;\n        r = dot / mr;\n        if (r > 1)r = 1;\n        if (r < -1)r = -1;\n        // 解值并结合方向转化为角度值；\n        return Math.acos(r) * direction * 180 / Math.PI;\n    },\n    getBasePoint(el) {\n        if (!el) return {x:0,y:0};\n        let offset = this.getOffset(el);\n        let x = offset.left + el.getBoundingClientRect().width / 2,\n            y = offset.top + el.getBoundingClientRect().width / 2;\n        return {x: Math.round(x), y: Math.round(y)};\n    },\n    extend(obj1, obj2) {\n        for (let k in obj2) {\n            if (obj2.hasOwnProperty(k)) {\n                if(typeof obj2[k] == 'object' && !(obj2[k] instanceof Node)){\n                    if(typeof obj1[k] !== 'object'){\n                        obj1[k] = {};\n                    }\n                    this.extend(obj1[k],obj2[k]);\n                }else{\n                    obj1[k] = obj2[k];\n                }\n            }\n        }\n        return obj1;\n    },\n    getVector(p1, p2) {\n        if (typeof p1 !== 'object' || typeof p2 !== 'object' ) {\n            console.error('getvector error!');\n            return;\n        }\n        let x = Math.round(p1.x - p2.x),\n            y = Math.round(p1.y - p2.y);\n        return { x, y };\n    },\n    getPoint(ev, index) {\n        if (!ev || !ev.touches[index]) {\n            console.error('getPoint error!');\n            return;\n        }\n        return {\n            x: Math.round(ev.touches[index].pageX),\n            y: Math.round(ev.touches[index].pageY),\n        };\n    },\n    getOffset(el){\n        el = typeof el == 'string'? document.querySelector(el): el;\n        let rect = el.getBoundingClientRect();\n        let offset = {\n            left:rect.left + document.body.scrollLeft,\n            top:rect.top + document.body.scrollTop,\n            width:el.offsetWidth,\n            height:el.offsetHeight,\n        };\n        return offset;\n    },\n    matrixTo(matrix){\n        let arr = (matrix.replace('matrix(','').replace(')','')).split(',');\n        let cos = arr[0],\n            sin = arr[1],\n            tan = sin / cos,\n            rotate = Math.atan( tan ) * 180 / Math.PI,\n            scale = cos / ( Math.cos( Math.PI / 180 * rotate )),\n            trans;\n        trans = {\n            x:parseInt(arr[4]),\n            y:parseInt(arr[5]),\n            scale,\n            rotate,\n        };\n        return trans;\n    },\n    getUseName(evName){\n        let useName = evName.replace('start','');\n        let end = useName.indexOf('rotate') !== -1 ? 'nd' : 'end';\n        useName = useName.replace(end,'');\n        return useName;\n    },\n    domify(DOMString) {\n        let htmlDoc = document.implementation.createHTMLDocument();\n        htmlDoc.body.innerHTML = DOMString;\n        return htmlDoc.body.children;\n    },\n    getEl(el){\n        if(!el){\n            console.error('el error,there must be a el!');\n            return;\n        }\n        let _el;\n        if(typeof el == 'string'){\n            _el = document.querySelector(el);\n        }else if(el instanceof Node){\n            _el = el;\n        }else{\n            console.error('el error,there must be a el!');\n            return;\n        }\n        return _el;\n    },\n    data(el,key){\n        el = this.getEl(el);\n        return el.getAttribute(`data-${key}`);\n    },\n    include(str1,str2){\n        if(str1.indexOf){\n            return str1.indexOf(str2) !== -1;\n        }else{\n            return false;\n        }\n    },\n    getPos(el) {\n        if(!el)return;\n        el = this.getEl(el);\n        let defaulTrans;\n        let style = window.getComputedStyle(el,null);\n        let cssTrans = style.transform || style.webkitTransform;\n\n        if(window.getComputedStyle && cssTrans !== 'none'){\n            defaulTrans = this.matrixTo(cssTrans);\n        }else{\n            defaulTrans = {\n                x: 0,\n                y: 0,\n                scale: 1,\n                rotate: 0,\n            };\n        }\n        return JSON.parse(el.getAttribute('data-mtouch-status')) || defaulTrans;\n    },\n};\n","export default class HandlerBus{\n    constructor(el) {\n        this.handlers = [];\n        this.el = el;\n    }\n    add(handler){\n        this.handlers.push(handler);\n        return this;\n    }\n    del(handler){\n        if(!handler){\n            this.handlers = [];\n        }else{\n            this.handlers.forEach((value,index)=>{\n                if(value === handler){\n                    this.handlers.splice(index,1);\n                }\n            });\n        }\n        return this;\n    }\n    fire(){\n        if(!this.handlers || !this.handlers.length === 0)return;\n        this.handlers.forEach(handler=>{\n            if(typeof handler === 'function') handler.apply(this.el, arguments);\n        });\n        return this;\n    }\n}\n"],"names":["MTouch","el","this","use","operator","_","getEl","draging","pinching","rotating","singlePinching","singleRotating","fingers","startScale","startPoint","secondPoint","pinchStartLength","singlePinchStartLength","vector1","singleBasePoint","_driveBus","_bind","v1","error","Math","sqrt","x","y","v2","direction","getLength","len2","mr","len1","dot","r","acos","PI","offset","getOffset","left","getBoundingClientRect","width","top","round","obj1","obj2","k","hasOwnProperty","_typeof","Node","extend","p1","p2","ev","index","touches","pageX","pageY","document","querySelector","rect","body","scrollLeft","scrollTop","offsetWidth","offsetHeight","matrix","arr","replace","split","cos","sin","tan","rotate","atan","scale","parseInt","evName","useName","end","indexOf","DOMString","htmlDoc","implementation","createHTMLDocument","innerHTML","children","_el","key","getAttribute","str1","str2","defaulTrans","style","window","getComputedStyle","cssTrans","transform","webkitTransform","matrixTo","JSON","parse","HandlerBus","handlers","handler","push","forEach","value","splice","length","apply","_this2","EVENT","ORIGINEVENT","prototype","_this","fn","bind","addEventListener","destroy","removeEventListener","_this3","_start","e","type","getPoint","getBasePoint","getVector","singlePinch","pinchV1","touchstart","fire","origin","eventType","_move","isSingleButton","data","target","curFingers","curPoint","singlePinchLength","pinchLength","rotateV1","rotateV2","pinchV2","curSecPoint","vector2","pinch","_eventFire","getAngle","singleRotate","drag","touchmove","preventDefault","_end","_eventEnd","touchend","ing","start","_addButton","domify","button","_style","appendChild","setAttribute","position","switch","addButton","on","include","_on","v","getUseName","add","off","del"],"mappings":"gRAOA,QAAwBA,QAAOC,0DAAK,QAE1BC,eAAgBF,IAAQ,MAAO,IAAIA,GAAOC,QAG3CE,WACK,SACC,UACC,eACK,gBACC,QAGbC,SAAWF,KAAKD,GAAKI,EAAEC,MAAML,QAE7BM,QAAUL,KAAKM,SAAWN,KAAKO,SAAWP,KAAKQ,eAAiBR,KAAKS,gBAAiB,OAEtFC,QAAU,OACVC,WAAa,OACbC,mBACAC,oBACAC,iBAAmB,UACnBC,uBAAyB,UACzBC,gBACAC,wBAGAC,iBAEAC,8OCnCKC,SACY,qBAAPA,gBAAAA,iBACCC,MAAM,oBAGXC,KAAKC,KAAKH,EAAGI,EAAIJ,EAAGI,EAAIJ,EAAGK,EAAIL,EAAGK,sBAEpCL,EAAIM,MACS,qBAAPN,gBAAAA,KAAiC,qBAAPM,gBAAAA,wBACzBL,MAAM,sBAIdM,GAAYP,EAAGI,EAAIE,EAAGD,EAAIC,EAAGF,EAAIJ,EAAGK,EAAI,EAAI,GAAI,IAEzCzB,KAAK4B,UAAUR,GACtBS,EAAO7B,KAAK4B,UAAUF,GACtBI,EAAKC,EAAOF,EACZG,SAAIC,eACG,KAAPH,EAAgB,KAGdV,EAAGI,EAAIE,EAAGF,EAAIJ,EAAGK,EAAIC,EAAGD,IAC1BO,EAAMF,EACNG,EAAI,IAAEA,EAAI,GACVA,GAAK,IAAEA,GAAK,GAETX,KAAKY,KAAKD,GAAKN,EAAY,IAAML,KAAKa,2BAEpCpC,OACJA,EAAI,OAAQyB,EAAE,EAAEC,EAAE,MACnBW,GAASpC,KAAKqC,UAAUtC,GACxByB,EAAIY,EAAOE,KAAOvC,EAAGwC,wBAAwBC,MAAQ,EACrDf,EAAIW,EAAOK,IAAM1C,EAAGwC,wBAAwBC,MAAQ,SAChDhB,EAAGF,KAAKoB,MAAMlB,GAAIC,EAAGH,KAAKoB,MAAMjB,qBAErCkB,EAAMC,OACJ,GAAIC,KAAKD,GACNA,EAAKE,eAAeD,KACC,UAAlBE,EAAOH,EAAKC,KAAoBD,EAAKC,YAAcG,QAM7CH,GAAKD,EAAKC,IALO,WAAnBE,EAAOJ,EAAKE,QACNA,YAEJI,OAAON,EAAKE,GAAGD,EAAKC,YAM9BF,uBAEDO,EAAIC,SACQ,qBAAPD,gBAAAA,KAAiC,qBAAPC,gBAAAA,iBACzB9B,MAAM,qBAKTG,EAFDF,KAAKoB,MAAMQ,EAAG1B,EAAI2B,EAAG3B,GAEjBC,EADJH,KAAKoB,MAAMQ,EAAGzB,EAAI0B,EAAG1B,uBAGxB2B,EAAIC,SACJD,IAAOA,EAAGE,QAAQD,MAKhB/B,KAAKoB,MAAMU,EAAGE,QAAQD,GAAOE,SAC7BjC,KAAKoB,MAAMU,EAAGE,QAAQD,GAAOG,qBALxBnC,MAAM,uCAQZtB,KACY,gBAANA,GAAgB0D,SAASC,cAAc3D,GAAKA,KACpD4D,GAAO5D,EAAGwC,oCAELoB,EAAKrB,KAAOmB,SAASG,KAAKC,eAC3BF,EAAKlB,IAAMgB,SAASG,KAAKE,gBACvB/D,EAAGgE,mBACFhE,EAAGiE,iCAITC,MACDC,GAAOD,EAAOE,QAAQ,UAAU,IAAIA,QAAQ,IAAI,IAAKC,MAAM,KAC3DC,EAAMH,EAAI,GACVI,EAAMJ,EAAI,GACVK,EAAMD,EAAMD,EACZG,EAA4B,IAAnBlD,KAAKmD,KAAMF,GAAcjD,KAAKa,GACvCuC,EAAQL,EAAQ/C,KAAK+C,IAAK/C,KAAKa,GAAK,IAAMqC,YAGxCG,SAAST,EAAI,MACbS,SAAST,EAAI,2CAMZU,MACHC,GAAUD,EAAOT,QAAQ,QAAQ,IACjCW,GAAqC,IAA/BD,EAAQE,QAAQ,UAAmB,KAAO,eAC1CF,EAAQV,QAAQW,EAAI,qBAG3BE,MACCC,GAAUxB,SAASyB,eAAeC,8BAC9BvB,KAAKwB,UAAYJ,EAClBC,EAAQrB,KAAKyB,yBAElBtF,OACEA,sBACQsB,MAAM,mCAGdiE,aACY,gBAANvF,KACA0D,SAASC,cAAc3D,OAC3B,CAAA,KAAGA,YAAciD,2BAGX3B,MAAM,kCAFRtB,QAKHuF,kBAENvF,EAAGwF,YACCvF,KAAKI,MAAML,GACTA,EAAGyF,qBAAqBD,qBAE3BE,EAAKC,WACND,EAAKV,UAC2B,IAAxBU,EAAKV,QAAQW,oBAKrB3F,MACCA,KACCC,KAAKI,MAAML,MACZ4F,UACAC,EAAQC,OAAOC,iBAAiB/F,EAAG,MACnCgG,EAAWH,EAAMI,WAAaJ,EAAMK,yBAErCJ,OAAOC,kBAAiC,SAAbC,EACZ/F,KAAKkG,SAASH,MAGrB,IACA,QACI,SACC,GAGTI,KAAKC,MAAMrG,EAAGyF,aAAa,wBAA0BG,0PCzJ/CU,wBACLtG,kBACHuG,iBACAvG,GAAKA,wCAEVwG,eACKD,SAASE,KAAKD,GACZvG,iCAEPuG,oBACIA,QAGKD,SAASG,QAAQ,SAACC,EAAMrD,GACtBqD,IAAUH,KACJD,SAASK,OAAOtD,EAAM,UAJ9BiD,YAQFtG,8DAGHA,KAAKsG,UAAsC,KAAzBtG,KAAKsG,SAASM,mBAC/BN,SAASG,QAAQ,YACI,kBAAZF,IAAwBA,EAAQM,MAAMC,EAAK/G,QAElDC,obFvBT+G,GAAS,aAAa,YAAY,WAAW,OAAO,YAAY,UAAU,QAAQ,aAAa,WAAW,SAAS,cAAc,WAAW,mBAAmB,cAAc,iBAAiB,eAAe,oBAAoB,kBAEjOC,GAAe,aAAc,YAAa,WAAY,qBAkC5DlH,GAAOmH,UAAU/F,UAAY,wBACnBuF,QAAQ,cACL7B,GAAU,GAAIyB,GAAWa,EAAKnH,OAI3CD,EAAOmH,UAAU9F,MAAQ,wBACTsF,QAAQ,eACZU,GAAe,eAAVvC,EAAyB,MAAOA,EAAOT,QAAQ,QAAS,UAExDgD,WAAaL,MAASK,GAAMC,UAChCrH,GAAGsH,iBAAiBzC,EAAQkC,MAASK,YAAY,MAG9DrH,EAAOmH,UAAUK,QAAU,wBACXb,QAAQ,eACZU,GAAe,eAAVvC,EAA0B,MAAQA,EAAOT,QAAQ,QAAS,MAC9DpE,GAAGwH,oBAAoB3C,EAAQ4C,MAASL,YAAY,MAGjErH,EAAOmH,UAAUQ,OAAS,SAASC,MAC1BA,EAAEpE,SAAsB,eAAXoE,EAAEC,cAEfjH,QAAUgH,EAAEpE,QAAQsD,YAEpBhG,WAAaT,EAAEyH,SAASF,EAAG,QAE3BzG,gBAAkBd,EAAE0H,aAAa7H,KAAKE,UAEvCF,KAAKU,QAAU,OAEVG,YAAcV,EAAEyH,SAASF,EAAG,QAE5B1G,QAAUb,EAAE2H,UAAU9H,KAAKa,YAAab,KAAKY,iBAE7CE,iBAAmBX,EAAEyB,UAAU5B,KAAKgB,aACtC,IAAIhB,KAAKC,IAAI8H,YAAa,IAEzBC,GAAU7H,EAAE2H,UAAU9H,KAAKY,WAAYZ,KAAKiB,sBAC3CF,uBAAyBZ,EAAEyB,UAAUoG,QAGzCC,WAAWC,MAAMC,OAAQT,EAAGU,UAAW,iBAEhDtI,EAAOmH,UAAUoB,MAAQ,SAASjF,MACzBA,EAAGE,SAAuB,cAAZF,EAAGuE,SAElBW,GAAiBnI,EAAEoI,KAAKnF,EAAGoF,OAAO,gBAClCC,EAAarF,EAAGE,QAAQsD,OACxB8B,EAAWvI,EAAEyH,SAASxE,EAAI,GAC1BuF,SACAC,SACAC,SACAC,SACAC,YAGAN,EAAazI,KAAKU,oBACbE,WAAa8H,YACbhI,QAAU+H,QAKfA,EAAa,IAAOzI,KAAKa,aAAgBb,KAAKgB,SAAYhB,KAAKc,wBAC1DD,YAAcV,EAAEyH,SAASxE,EAAI,QAC7BpC,QAAUb,EAAE2H,UAAU9H,KAAKa,YAAab,KAAKY,iBAC7CE,iBAAmBX,EAAEyB,UAAU5B,KAAKgB,UAGzCyH,EAAa,EAAG,IACZO,GAAc7I,EAAEyH,SAASxE,EAAI,GAC7B6F,EAAU9I,EAAE2H,UAAUkB,EAAaN,EAEnC1I,MAAKC,IAAIiJ,UACK/I,EAAEyB,UAAUqH,QACrBE,WAAW,sBAEDP,EAAc5I,KAAKc,yBAEtBsC,SAEPtC,iBAAmB8H,GAGxB5I,KAAKC,IAAIuE,cACJ2E,WAAW,wBAEAhJ,EAAEiJ,SAASpJ,KAAKgB,QAASiI,WAE7B7F,SAEPpC,QAAUiI,OAIfjJ,MAAKC,IAAI8H,aAAeO,MACdnI,EAAE2H,UAAUY,EAAU1I,KAAKiB,mBACjBd,EAAEyB,UAAUmH,QAC3BI,WAAW,4BAEDR,EAAoB3I,KAAKe,8BACzB2H,EAASlH,EAAIxB,KAAKY,WAAWY,SAC7BkH,EAASjH,EAAIzB,KAAKY,WAAWa,UAEhC2B,SAEPrC,uBAAyB4H,GAG9B3I,KAAKC,IAAIoJ,cAAgBf,MACdnI,EAAE2H,UAAU9H,KAAKY,WAAYZ,KAAKiB,mBAClCd,EAAE2H,UAAUY,EAAU1I,KAAKiB,sBACjCkI,WAAW,8BAEAhJ,EAAEiJ,SAASP,EAAUC,WAEzB1F,IAKhBpD,MAAKC,IAAIqJ,OACJhB,QACIa,WAAW,sBAEAT,EAASlH,EAAIxB,KAAKY,WAAWY,SAC7BkH,EAASjH,EAAIzB,KAAKY,WAAWa,UAEjC2B,UAIfxC,WAAa8H,OAEba,UAAUrB,MAAME,UAAW,YAAaD,OAAQ/E,MAClDoG,mBAEP1J,EAAOmH,UAAUwC,KAAO,SAASrG,eACxBA,EAAGE,SAAuB,aAAZF,EAAGuE,MAAmC,gBAAZvE,EAAGuE,SAE/C,QAAS,OAAQ,SAAU,eAAgB,eAAelB,QAAQ,cAC1DiD,UAAU9E,GAASuD,OAAQ/E,WAE/BuG,SAASzB,MAAME,UAAW,WAAYD,OAAQ/E,MAEvDtD,EAAOmH,UAAUkC,WAAa,SAASvE,EAAQxB,MACvCwG,GAAShF,QACTiF,EAAWjF,SACV5E,MAAK4J,MAKHxB,UAAYxD,OACVA,GAAQsD,KAAK9E,OALfgF,UAAYyB,OACVA,GAAO3B,KAAK9E,QACZwG,IAAO,IAMpB9J,EAAOmH,UAAUyC,UAAY,SAAS9E,EAAQxB,MACtCwG,GAAShF,QACTE,WACU,UAAVF,GAAgC,gBAAVA,EACbA,OAEAA,QAET5E,KAAK4J,OACFxB,UAAYtD,OACVA,GAAKoD,KAAK9E,QACVwG,IAAO,IAKpB9J,EAAOmH,UAAU6C,WAAa,SAAS/J,SACpBI,EAAE4J,8LAAZC,OACDC,WACDC,YAAYF,KACZG,aAAa,yBAAwB,GACrCrE,kBAAkE,WAA9CD,OAAOC,iBAAiB/F,EAAG,MAAMqK,aAC3CrK,EAAG6F,OAAS,KAClBA,MAAQqE,EAAS,sBAI5BnK,EAAOmH,UAAUoD,OAAS,SAAStK,MAAGuK,8DAC9BhF,aACAvF,mBACKG,SAAWF,KAAKD,SAGpBG,SAAWoF,EAAMnF,EAAEC,MAAML,IAC1BI,EAAEoI,KAAKjD,EAAI,sBAAwBtF,KAAKC,IAAIoJ,cAAgBrJ,KAAKC,IAAI8H,cAAgBuC,QAChFR,WAAWxE,IAGxBxF,EAAOmH,UAAUsD,GAAK,SAAS3F,cAAQ2B,yDAAU,aAAQrG,qBAClDC,GAAEqK,QAAQ5F,EAAO,OACTR,MAAM,KAAKqC,QAAQ,cACjBgE,IAAIC,EAAEnE,EAAQrG,UAGlBuK,IAAI7F,EAAO2B,EAAQrG,GAErBF,MAEXF,EAAOmH,UAAUwD,IAAM,SAAS7F,EAAO2B,EAAQrG,QACtCD,IAAIE,EAAEwK,WAAW/F,KAAW,OAC5BA,GAAQgG,IAAIrE,QACZ8D,OAAOnK,IAEhBJ,EAAOmH,UAAU4D,IAAM,SAASjG,EAAQ2B,QAC/B3B,GAAQkG,IAAIvE"}